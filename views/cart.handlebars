<div class="container py-4">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Carrito de Compras</h1>
    <div>
      <a href="/products" class="btn btn-outline-primary me-2">
        <i class="fas fa-arrow-left me-1"></i> Seguir comprando
      </a>
      <button class="btn btn-danger" onclick="clearCart('{{cart._id}}')">
        <i class="fas fa-trash me-1"></i> Vaciar carrito
      </button>
    </div>
  </div>

  {{#if cart.products.length}}
    <div class="table-responsive">
      <table class="table table-hover align-middle">
        <thead class="table-light">
          <tr>
            <th style="width: 40%">Producto</th>
            <th class="text-center">Precio unitario</th>
            <th class="text-center">Cantidad</th>
            <th class="text-center">Subtotal</th>
            <th class="text-center">Acciones</th>
          </tr>
        </thead>
        <tbody>
          {{#each cart.products}}
            <tr>
              <td>
                <div class="d-flex align-items-center">
                  {{#if product.thumbnails.[0]}}
                    <img src="{{product.thumbnails.[0]}}" alt="{{product.title}}" 
                         class="img-thumbnail me-3" style="width: 80px; height: 80px; object-fit: contain;">
                  {{/if}}
                  <div>
                    <h5 class="mb-1">{{product.title}}</h5>
                    <p class="mb-1 text-muted small">{{product.category}}</p>
                    <p class="mb-0 small">{{product.code}}</p>
                  </div>
                </div>
              </td>
              <td class="text-center">${{formatPrice product.price}}</td>
              <td class="text-center">
                <div class="d-flex justify-content-center align-items-center">
                  <button class="btn btn-sm btn-outline-secondary" 
                          onclick="updateQuantity('{{../cart._id}}', '{{product._id}}', {{subtract quantity 1}})">
                    <i class="fas fa-minus"></i>
                  </button>
                  <span class="mx-2 px-2 py-1 bg-light rounded" style="min-width: 30px; display: inline-block;">
                    {{quantity}}
                  </span>
                  <button class="btn btn-sm btn-outline-secondary" 
                          onclick="updateQuantity('{{../cart._id}}', '{{product._id}}', {{add quantity 1}})">
                    <i class="fas fa-plus"></i>
                  </button>
                </div>
              </td>
              <td class="text-center fw-bold">${{formatPrice (multiply product.price quantity)}}</td>
              <td class="text-center">
                <button class="btn btn-sm btn-outline-danger" 
                        onclick="removeFromCart('{{../cart._id}}', '{{product._id}}')">
                  <i class="fas fa-trash-alt"></i>
                </button>
              </td>
            </tr>
          {{/each}}
        </tbody>
        <tfoot class="table-group-divider">
          <tr>
            <td colspan="3" class="text-end fw-bold fs-5">Total:</td>
            <td class="text-center fw-bold fs-5">${{formatPrice cart.total}}</td>
            <td></td>
          </tr>
        </tfoot>
      </table>
    </div>

    <div class="d-flex justify-content-end mt-4">
      <a href="/checkout" class="btn btn-success btn-lg">
        <i class="fas fa-credit-card me-2"></i> Proceder al pago
      </a>
    </div>
  {{else}}
    <div class="text-center py-5">
      <i class="fas fa-shopping-cart fa-4x text-muted mb-4"></i>
      <h3 class="mb-3">Tu carrito está vacío</h3>
      <p class="text-muted mb-4">Agrega productos para comenzar a comprar</p>
      <a href="/products" class="btn btn-primary">
        <i class="fas fa-store me-2"></i> Ver productos
      </a>
    </div>
  {{/if}}
</div>

<script>
  async function updateQuantity(cartId, productId, newQuantity) {
    try {
      if (newQuantity <= 0) {
        return removeFromCart(cartId, productId);
      }

      const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ quantity: newQuantity })
      });

      if (!response.ok) {
        const error = await response.json();
        throw new Error(error.message || 'Error al actualizar cantidad');
      }

      window.location.reload();
    } catch (error) {
      console.error('Error:', error);
      alert(error.message);
    }
  }

  async function removeFromCart(cartId, productId) {
    if (!confirm('¿Estás seguro de eliminar este producto del carrito?')) return;

    try {
      const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
        method: 'DELETE'
      });

      if (!response.ok) {
        const error = await response.json();
        throw new Error(error.message || 'Error al eliminar producto');
      }

      window.location.reload();
    } catch (error) {
      console.error('Error:', error);
      alert(error.message);
    }
  }

  async function clearCart(cartId) {
    if (!confirm('¿Estás seguro de vaciar todo el carrito?')) return;

    try {
      const response = await fetch(`/api/carts/${cartId}`, {
        method: 'DELETE'
      });

      if (!response.ok) {
        const error = await response.json();
        throw new Error(error.message || 'Error al vaciar carrito');
      }

      window.location.reload();
    } catch (error) {
      console.error('Error:', error);
      alert(error.message);
    }
  }
</script>